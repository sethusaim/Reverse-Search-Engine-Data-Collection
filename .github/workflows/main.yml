on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

name: Push Docker Image to Amazon ECR

jobs: 
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: aws-scania-repo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build --build-arg AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
            --build-arg AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            --build-arg AWS_DEFAULT_REGION="${{ secrets.AWS_DEFAULT_REGION }}" \
            --build-arg AWS_DATABASE_HOST="${{secrets.AWS_DATABASE_HOST}}" \
            --build-arg AWS_DATABASE_USERNAME="${{secrets.AWS_DATABASE_USERNAME}}" \
            --build-arg AWS_DATABASE_PASSWORD="${{secrets.AWS_DATABASE_PASSWORD}}" \
            --build-arg AWS_DATABASE_NAME="${{secrets.AWS_DATABASE_NAME}}" \ 
            --build-arg AWS_DATABASE_TABLE="${{secrets.AWS_DATABASE_TABLE}}" \
            --build-arg AWS_BUCKET_NAME="${{secrets.AWS_BUCKET_NAME}}" \
            --build-arg AWS_BUCKET_HEADER_URL="${{secrets.AWS_BUCKET_HEADER_URL}}" \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
